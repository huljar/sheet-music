# Workflow to compile all .tex files with MusiXTeX, then deploy the resulting .pdf files and the contents of the docs
# folder to Github Pages
name: Compile and deploy content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Setup GitHub Pages
  setup-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5

  # Build all .tex files with MusiXTeX
  build-pdf-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Run MusiXTeX
        uses: xu-cheng/texlive-action@v2
        with:
          scheme: full
          run: |
            apk add make
            make
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: compiled-sheet-music
          path: build/*

  # Build docs
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: compiled-docs
          path: "docs"

  # Deploy everything to Pages
  deploy-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [setup-pages, build-pdf-files, build-docs]
    steps:
      - name: Create temporary directory
        run: mkdir dist
      - name: Download sheet music artifact
        uses: actions/download-artifact@v4
        with:
          name: compiled-sheet-music
          path: dist
      - name: Delete sheet music artifact
        uses: GeekyEggo/delete-artifact@v5.1.0
        with:
          name: compiled-sheet-music
      - name: Download docs artifact
        uses: actions/download-artifact@v4
        with:
          name: compiled-docs
          path: dist
      - name: Delete docs artifact
        uses: GeekyEggo/delete-artifact@v5.1.0
        with:
          name: compiled-docs
      - name: Upload Pages-compatible artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
